Create Database PythontoSql;

Use PythontoSql;

CREATE TABLE DF_ORDERS (
    [ORDER_ID] INT PRIMARY KEY,
    [ORDER_DATE] DATE,
    [SHIP_MODE] VARCHAR(20),
    [SEGMENT] VARCHAR(20),
    [COUNTRY] VARCHAR(20),
    [CITY] VARCHAR(20),
    [STATE] VARCHAR(20),
    [POSTAL_CODE] VARCHAR(20),
    [REGION] VARCHAR(20),
    [CATEGORY] VARCHAR(20),
    [SUB_CATEGORY] VARCHAR(20),
    [PRODUCT_ID] VARCHAR(20),
    [QUANTITY] INT,
    [DISCOUNT] DECIMAL(7, 2),
    [SALE_PRICE] DECIMAL(7, 2),
    [PROFIT] DECIMAL(7, 2)
);

SELECT * FROM DF_ORDERS

--FIND TOP 10  HIGHEST REVENUE GENERATING PRODUCTS
SELECT TOP 10 
	CATEGORY, 
	PRODUCT_ID, 
	SUM(SALE_PRICE) AS SALES
FROM 
	DF_ORDERS
GROUP BY 
	CATEGORY,
	PRODUCT_ID
ORDER BY 
	SALES DESC;

-- FIND TOP 10 HIGHEST SELLING PRODUCTS IN EACH REGION
WITH CTE AS (
SELECT 
	REGION,
	PRODUCT_ID, 
	SUM(SALE_PRICE) AS SALES,
	ROW_NUMBER() OVER ( PARTITION BY REGION ORDER BY SUM(SALE_PRICE) DESC ) AS RN
FROM 
	DF_ORDERS
GROUP BY 
	REGION,PRODUCT_ID)
SELECT 
	REGION,
	PRODUCT_ID,
	SALES
FROM
	CTE
WHERE RN<=5
ORDER BY REGION, SALES DESC

-- FIND MONTH OVER MONTH GROWTH COMPARISION FOR 2022 AND 2023 SALES EG : JAN 2022 VS JAN 2023
WITH CTE AS (
SELECT 
	YEAR (ORDER_DATE) AS ORDER_YEAR, 
	MONTH(ORDER_DATE) AS ORDER_MONTH,
	SUM(SALE_PRICE) AS SALES
FROM 
	DF_ORDERS
GROUP BY 
	YEAR(ORDER_DATE),
	MONTH(ORDER_DATE)
	)
SELECT 
	ORDER_MONTH,
	SUM(CASE WHEN ORDER_YEAR=2022 THEN SALES ELSE 0 END) AS SALES_2022,
	SUM(CASE WHEN ORDER_YEAR=2023 THEN SALES ELSE 0 END) AS SALES_2023
FROM 
	CTE
GROUP BY 
	ORDER_MONTH
ORDER BY 
	ORDER_MONTH

-- FOR EACH CATEGORY WHICH MONTH  HAD HIGHEST SALES
WITH CTE AS (
SELECT 
	CATEGORY,
	YEAR (ORDER_DATE) AS ORDER_YEAR,
	MONTH(ORDER_DATE) AS ORDER_MONTH,
	SUM(SALE_PRICE) AS SALES,
	ROW_NUMBER () OVER (PARTITION BY CATEGORY ORDER BY SUM(SALE_PRICE) DESC ) AS RN
FROM 
	DF_ORDERS
GROUP BY 
	CATEGORY, 
	YEAR (ORDER_DATE),
	MONTH(ORDER_DATE)
	)
SELECT 
	 CATEGORY,
	 ORDER_YEAR,
	 ORDER_MONTH,
	 SALES
FROM 
	CTE
WHERE RN = 1

-- WHICH SUB CATEGORY HAD HIGHEST GROWTH BY PROFIT IN 2023 COMPAR TO 2022
WITH CTE AS (
SELECT 
	SUB_CATEGORY, 
	YEAR (ORDER_DATE) AS ORDER_YEAR, 
	MONTH(ORDER_DATE) AS ORDER_MONTH,
	SUM(SALE_PRICE) AS SALES
FROM 
	DF_ORDERS
GROUP BY 
	SUB_CATEGORY,
	YEAR(ORDER_DATE),
	MONTH(ORDER_DATE)
 )
SELECT TOP 1
	SUB_CATEGORY,
	SUM(CASE WHEN ORDER_YEAR=2022 THEN SALES ELSE 0 END) AS SALES_2022,
	SUM(CASE WHEN ORDER_YEAR=2023 THEN SALES ELSE 0 END) AS SALES_2023,
	SUM(CASE WHEN ORDER_YEAR=2023 THEN SALES ELSE 0 END)-SUM(CASE WHEN ORDER_YEAR=2022 THEN SALES ELSE 0 END) AS PROFIT_GROWTH
FROM 
	CTE
GROUP BY 
	SUB_CATEGORY
ORDER BY
	PROFIT_GROWTH DESC

